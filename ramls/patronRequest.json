{
	"$schema": "http://json-schema.org/draft-04/schema#",
	"type": "object",
	"description": "A request made by a service user to locate and supply an item",
	"note": "This schema is not actionable code, but a hand-crafted documentation of the Real Truth, which is found in ../grails-app/domain/org/olf/rs/PatronRequest.groovy",
	"additionalProperties": false,
	"properties": {
		"id": {
			"description": "internal ID of the patron request (NOT of the requested item)",
			"type": "string"
		},
		"publicationType": {
			"type": "string"
		},
		"title": {
			"description": "Title of the item requested",
			"type": "string"
		},
		"author": {
			"description": "Author of the item requested",
			"type": "string"
		},
		"subtitle": {
			"type": "string"
		},
		"sponsoringBody": {
			"type": "string"
		},
		"publisher": {
			"type": "string"
		},
		"placeOfPublication": {
			"type": "string"
		},
		"volume": {
			"type": "string"
		},
		"issue": {
			"type": "string"
		},
		"startPage": {
			"type": "string"
		},
		"numberOfPages": {
			"type": "string"
		},
		"publicationDate": {
			"type": "string"
		},
		"publicationDateOfComponent": {
			"type": "string"
		},
		"edition": {
			"type": "string"
		},
		"patronReference": {
			"description": "Patron reference (EG Barcode)",
			"type": "string"
		},
		"serviceType": {
			"description": "e.g. 'Loan', 'Copy-non-returnable'",
			"type": "string"
		},
		"isRequester": {
			"description": "Is the this the requester or suppliers view of the request",
			"type": "boolean"
		},
		"state": {
			"description": "One of 'Idle', 'Approved', 'Pending', 'Cancelled', 'Shipped', 'Awaiting Collection', 'Filfilled', 'Unfilled'",
			"type": "string"
		},
		"numberOfRetries": {
			"description": "The number of retries that have occurred",
			"type": "integer"
		},
		"delayPerformingActionUntil": {
			"description": "Delay performing the action until this date / time arrives",
			"type": "string",
			"format": "date-time"
		},
		"pendingAction": {
			"description": "The action waiting to be performed on this request. No support yet for Action object, so use string for now",
			"type": "string"
		},
		"errorAction": {
			"description": "If we hit an error this is the action we were trying to perform",
			"type": "string"
		},
		"preErrorStatus": {
			"description": "If we hit an error this was the status prior to the error occurring. Same options as for 'state'",
			"type": "string"
		},
		"awaitingProtocolResponse": {
			"description": "Are we waiting for a protocol message to be sent",
			"type": "boolean"
		},
		"rotaPosition": {
			"description": "The position we are in the rota",
			"type": "integer"
		},
		"tags": {
			"description": "XXX to do",
			"type": "string"
		},
		"customProperties": {
			"description": "XXX to do",
			"type": "string"
		}
	},
	"required": []
}
